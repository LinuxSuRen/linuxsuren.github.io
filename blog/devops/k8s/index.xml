<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on SuRenPi</title>
    <link>https://linuxsuren.github.io/blog/devops/k8s/</link>
    <description>Recent content in Kubernetes on SuRenPi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://linuxsuren.github.io/blog/devops/k8s/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ake</title>
      <link>https://linuxsuren.github.io/blog/devops/k8s/ake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/devops/k8s/ake/</guid>
      <description> 更新依赖 执行命令 yum upgrade libsepol libsemanage libselinux libsemanage libselinux audit-libs
安装 AKE 通过命令 wget http://get.alauda.cn/deploy/ake/ake &amp;amp;&amp;amp; chmod u+x ake &amp;amp;&amp;amp; ./ake up 会安装 AKE 以及 Kubernetes。
如果发生错误的，需要执行该命令来清理 curl http://get.alauda.cn/deploy/ake/cleanup | bash
修改配置文件 使用命令 vim ~/.kube/config，添加如下内容：
apiVersion: v1 clusters: - cluster: insecure-skip-tls-verify: true server: http://localhost:8080 name: local contexts: - context: cluster: local namespace: jx user: &amp;quot;&amp;quot; name: local current-context: local kind: Config preferences: {} users: - name: local user: as-user-extra: {}  </description>
    </item>
    
    <item>
      <title>ApiServer</title>
      <link>https://linuxsuren.github.io/blog/devops/k8s/apiserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/devops/k8s/apiserver/</guid>
      <description> ApiServer </description>
    </item>
    
    <item>
      <title>Kubectl</title>
      <link>https://linuxsuren.github.io/blog/devops/k8s/kuberctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/devops/k8s/kuberctl/</guid>
      <description>下载 wget https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl
切换上下文 kubectl config use-context dev
查看上下文 kubectl config current-context</description>
    </item>
    
    <item>
      <title>Minikube</title>
      <link>https://linuxsuren.github.io/blog/devops/k8s/minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/devops/k8s/minikube/</guid>
      <description>下载 wget https://github.com/kubernetes/minikube/releases/download/v0.26.1/minikube-linux-amd64
然后，添加可执行权限并移动到执行目录下：
chmodd u+x minikube-linux-amd64 &amp;amp;&amp;amp; mv minikube-linux-amd64 /usr/local/bin/minikue
下载ISO wget https://storage.googleapis.com/minikube/iso/minikube-v0.26.0.iso</description>
    </item>
    
    <item>
      <title>安装 Kubernetes</title>
      <link>https://linuxsuren.github.io/blog/devops/k8s/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/devops/k8s/install/</guid>
      <description>启用 Docker 服务 systemctl enable docker.service
安装 go 依赖 go get github.com/kubernetes-incubator/cri-tools/cmd/crictl
安装客户端
cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg EOF setenforce 0 yum install -y kubelet kubeadm kubectl systemctl enable kubelet &amp;amp;&amp;amp; systemctl start kubelet  设置 kubelet sed -i &amp;quot;s/cgroup-driver=systemd/cgroup-driver=cgroupfs/g&amp;quot; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
重启 kubelet systemctl daemon-reload &amp;amp;&amp;amp; systemctl restart kubelet
禁用Swap swapoff -a
安装 master kubeadm init
export LC_ALL=en_US.utf-8 export LANG=en_US.utf-8
docker pull registry.cn-hangzhou.aliyuncs.com/surenpi/etcd-amd64:3.0.17 docker pull registry.</description>
    </item>
    
  </channel>
</rss>