<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins API 介绍 on SuRenPi</title>
    <link>http://surenpi.com/blog/devops/jenkins/api/</link>
    <description>Recent content in Jenkins API 介绍 on SuRenPi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 07 May 2019 11:54:58 +0800</lastBuildDate>
    
	<atom:link href="http://surenpi.com/blog/devops/jenkins/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Token</title>
      <link>http://surenpi.com/blog/devops/jenkins/api/token/</link>
      <pubDate>Tue, 07 May 2019 11:54:58 +0800</pubDate>
      
      <guid>http://surenpi.com/blog/devops/jenkins/api/token/</guid>
      <description>curl http://localhost:8080/user/admin/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken --header &amp;quot;Authorization: Basic `echo -n admin:1182fc5ef9b28a630986cb50c0319eb9d0 | base64`&amp;quot; -X POST -d &#39;newTokenName=name&#39;  返回的数据如下所示：
{&amp;quot;status&amp;quot;:&amp;quot;ok&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;tokenName&amp;quot;:&amp;quot;test&amp;quot;,&amp;quot;tokenUuid&amp;quot;:&amp;quot;3a07e7d7-c864-4474-bc3c-d217938e460e&amp;quot;,&amp;quot;tokenValue&amp;quot;:&amp;quot;1123acbf5d3e93e628a38dc0a671cf0194&amp;quot;}}  </description>
    </item>
    
    <item>
      <title>Pipeline</title>
      <link>http://surenpi.com/blog/devops/jenkins/api/pipeline/</link>
      <pubDate>Sun, 05 May 2019 10:26:05 +0800</pubDate>
      
      <guid>http://surenpi.com/blog/devops/jenkins/api/pipeline/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Approve</title>
      <link>http://surenpi.com/blog/devops/jenkins/api/approve/</link>
      <pubDate>Thu, 04 Apr 2019 10:49:47 +0800</pubDate>
      
      <guid>http://surenpi.com/blog/devops/jenkins/api/approve/</guid>
      <description>这里介绍的是核准插件中的 API 使用。
 该 DSL 是基于某一次构建的，因此，下面的 API 都需要对应的构建 ID。另外，还需要对应的 inputid。另外，下面提到的 API 并不是基于 Restful 风格 编写的，实际上是以表单的方式来提交的。也就是说，需要在发送请求时，在协议头中加入 Content-Type: application/x-www-form-urlencoded
  通过 input 这个 DSL 支持接收参数。
无参数 对于没有参数的情况，可以使用下面的两个 API 来核准。
curl http://localhost:8080/job/pipeline/1/input/inputid/proceed \ --header &amp;quot;Authorization: Basic `echo -n admin:token | base64`&amp;quot; -X POST  下面的 API 是直接无参数的调用
curl http://localhost:8080/job/pipeline/1/input/inputid/proceedEmpty \ --header &amp;quot;Authorization: Basic `echo -n admin:token | base64`&amp;quot; -X POST  有参数 参数需要以 JSON 数组的形式传递。
curl http://localhost:8080/job/pipeline/1/input/inputid/proceed \ --header &amp;quot;Authorization: Basic `echo -n admin:token | base64`&amp;quot; \ -X POST -d &#39;json={&amp;quot;parameter&amp;quot;: [{&amp;quot;name&amp;quot;: &amp;quot;name&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;bob&amp;quot;}, {&amp;quot;name&amp;quot;: &amp;quot;age&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;12&amp;quot;}]}&#39;  如果缺少参数的话，会返回 400</description>
    </item>
    
    <item>
      <title>CrumIssuer</title>
      <link>http://surenpi.com/blog/devops/jenkins/api/crumissuer/</link>
      <pubDate>Wed, 09 Jan 2019 17:35:18 +0800</pubDate>
      
      <guid>http://surenpi.com/blog/devops/jenkins/api/crumissuer/</guid>
      <description>如果配置了跨站请求伪造保护的话，可以通过下面的命令来获取相应的 Token
curl -u user:passwd http:/localhost:8080/jenkins/crumbIssuer/api/json
返回值类似于，而如果没有启用该配置的话会返回 404
{&amp;quot;_class&amp;quot;:&amp;quot;hudson.security.csrf.DefaultCrumbIssuer&amp;quot;,&amp;quot;crumb&amp;quot;:&amp;quot;6e78c5725ea0c522bdcb787d548465aa&amp;quot;,&amp;quot;crumbRequestField&amp;quot;:&amp;quot;Jenkins-Crumb&amp;quot;}  使用该 Crumb 的方式如下：
curl -u user:passwd http:/localhost:8080/jenkins/job/jobName/build -X POST --header &amp;quot;Jenkins-Crumb: 6e78c5725ea0c522bdcb787d548465aa&amp;quot;
使用 Python 获取 Crumb 值：
export issuer=$(curl -u admin:$JENKINS_TOKEN $JENKINS_URL/crumbIssuer/api/json -s) issuer=$(python -c &amp;quot;import json;import os;issuer=os.getenv(&#39;issuer&#39;);issuer=json.loads(issuer);print issuer[&#39;crumb&#39;]&amp;quot;)  </description>
    </item>
    
    <item>
      <title>多分支流水线</title>
      <link>http://surenpi.com/blog/devops/jenkins/api/multi-branch/</link>
      <pubDate>Wed, 09 Jan 2019 15:44:33 +0800</pubDate>
      
      <guid>http://surenpi.com/blog/devops/jenkins/api/multi-branch/</guid>
      <description>扫描多分支 curl -X POST -u user:passwd http://localhost:8080/jenkins/job/jobName/build --header &amp;quot;Jenkins-Crumb: 6e78c5725ea0c522bdcb787d548465aa&amp;quot;
Jenkins-Crumb 需要单独获取。</description>
    </item>
    
    <item>
      <title>Jenkins 核心</title>
      <link>http://surenpi.com/blog/devops/jenkins/api/core/</link>
      <pubDate>Thu, 03 Jan 2019 16:29:11 +0800</pubDate>
      
      <guid>http://surenpi.com/blog/devops/jenkins/api/core/</guid>
      <description>你可以通过如下的方式来访问 Jenkins：
单个任务 curl http://localhost:8080/jenkins/job/jobName/api/json?pretty=true 获取任务信息
curl -X POST http://localhost:8080/jenkins/job/jobName/build 触发构建
curl -X POST http://localhost:8080/jenkins/job/jobName/submitDescription?description=hello 添加描述信息
curl -X POST http://localhost:8080/jenkins/job/jobName/disable 禁用任务
curl -X POST http://localhost:8080/jenkins/job/jobName/enable 启用任务
curl -X POST http://localhost:8080/jenkins/job/jobName/doDelete 删除任务
构建历史 curl http://localhost:8080/jenkins/job/jobName/1/consoleText 获取构建历史的控制台日志
curl http://localhost:8080/jenkins/job/jobName/1/logText/progressiveText?start=0 获取部分日志，并返回是否还有未输出的日志。协议头中的 X-Text-Size 为日志内容的大小，X-More-Data 的值如果为 true 的话则标示还有未输出的日志。
curl -X POST http://localhost:8080/jenkins/job/jobName/1/doDelete 删除构建历史
下面是特定情况的构建：
curl http://localhost:8080/jenkins/job/jobName/lastBuild/consoleText 最近一次构建的日志
curl http://localhost:8080/jenkins/job/jobName/lastFailedBuild/consoleText 最近一次失败构建的日志
curl http://localhost:8080/jenkins/job/jobName/lastUnsuccessfulBuild/consoleText 最近一次未成功的构建日志
curl http://localhost:8080/jenkins/job/jobName/lastCompletedBuild/consoleText 最近一次完成的构建日志
插件管理 curl -u admin:token http://localhost:8080/jenkins/pluginManager/uploadPlugin -F &amp;quot;name=@target/demo.hpi&amp;quot; 上传插件</description>
    </item>
    
  </channel>
</rss>