<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SuRenPi</title>
    <link>https://linuxsuren.github.io/blog/</link>
    <description>Recent content on SuRenPi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://linuxsuren.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/build/maven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/build/maven/</guid>
      <description> 多模块 部署 如果有一个多模块的 Maven 工程，但是，在发布的时候有些工程不希望发布，例如：example 工程。这时候，可以在不需要发布的模块工程 pom.xml 中添加如下插件配置：
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-deploy-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.8.2&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;skip&amp;gt;true&amp;lt;/skip&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt;  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/docker/docker-daemon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/docker/docker-daemon/</guid>
      <description>API 通过命令 /usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://0.0.0.0:1234 启动 Docker Daemon 的话，可以设置 API 的访问。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/docker/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/docker/docker/</guid>
      <description>拉取镜像 docker pull jenkins/jnlp-slave:alpine
docker pull hub.alauda.cn/jenkins-jnlp-slave
启动 自启动 当 Docker 服务启动后，默认情况下，所有的容器都不会启动。如果在每次启动时 Docker 服务时，自动启动容器，可以通过添加下面的参数实现：
docker run jenkins --restart=always
最简单的启动命令 docker run surenpi/hugo-docker
容器停止后，自动删除 docker run --rm surenpi/hugo-docker
设置名称 当你启动 Docker 容器后，容器的名称时随机生成的。为了方便后续的查找，我们可以通过参数给容器设置一个名称：
docker run jenkins --name ci-jenkins
查看容器 我们可以使用命令 docker ps ，查看所有运行状态的容器。
如果要查看所有（包括已经停止的）容器话，可以使用参数：docker ps -a。
停止容器 我们可以使用命令 docker stop 94a5fa599b05 来停止容器。这里的参数，是容器的ID。当然，我们也可以把容器的名称作为参数。
日志 docker logs -f 94a5fa599b05
删除容器 我们可以通过命令 docker rm 94a5fa599b05 删除一个容器。当然，前提条件是该容器处于已停止的状态。
通过过滤镜像名称批量删除容器 docker stop $(docker ps | grep hello | awk &#39;{print $1}&#39;) &amp;amp;&amp;amp; docker rm $(docker ps | grep hello | awk &#39;{print $1}&#39;)</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/docker/dockerfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/docker/dockerfile/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/document/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/document/hugo/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/editor/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/editor/vim/</guid>
      <description> 故障排除 粘贴缩进错乱 让 vim 进入 paste 模式，命令如下：
:set paste
解除 paste 模式的命令如下：
:set nopaste
样例配置 set number set incsearch set hlsearch set autoindent &amp;quot;set smartindent set autochdir set ignorecase &amp;quot;set textwidth=80 set colorcolumn=+1 set tabstop=4 set shiftwidth=4 set expandtab set backspace=indent,start,eol set showmatch set matchtime=1 set ruler set foldmethod=syntax &amp;quot;set foldmethod=indent set foldlevel=0 set encoding=utf-8 set termencoding=utf-8 set langmenu=zh_CN.utf-8 language message zh_CN.utf-8 &amp;quot;set titlestring=中文 set nolist set nocursorline set nocursorcolumn syntax on filetype on  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/ide/eclipse-plugin-dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/ide/eclipse-plugin-dev/</guid>
      <description>Eclipse插件开发 类 ImageDescriptor 在 org.eclipse.jface 中。
控制台 构建 http://www.vogella.com/tutorials/EclipseTycho/article.html http://maven.apache.org/plugins/maven-eclipse-plugin/pde.html</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/grep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/grep/</guid>
      <description>反向查找 查找不包含特定字符的数据 ps -ef | grep -v running</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/linux/awk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/linux/awk/</guid>
      <description>列出第一列 docker ps | grep hello | awk &#39;{print $1}&#39;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/linux/find/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/linux/find/</guid>
      <description>查找大文件 find / -type f -size +500M 这里的 f 指的是文件类型，并且，大于500M的。而且，字母 M 是大写。
查找文件夹 find ~ -type d -name jx</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/linux/prompting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/linux/prompting/</guid>
      <description>命令提示符 使用命令 echo $PS1 可以查看当前的命令提示符配置
export PS1=&#39;[/u@/h /W/]/$ &#39;
\u 当前用户帐号
\h 当前主机名
\W 当前路径（大写为相对路径，小写为绝对路径）
\$</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/linux/service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/linux/service/</guid>
      <description>#!/bin/sh ### BEGIN INIT INFO # Provides: suren # Required-Start: $network $remote_fs $syslog # Required-Stop: $network $remote_fs $syslog # Should-Start: jenkins # Should-Stop: jenkins # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: http://surenpi.com # Description: http://surenpi.com ### END INIT INFO case $1 in start) echo &amp;quot;start&amp;quot; nohup java -jar /var/www/jenkins/jenkins.war --httpPort=9099 &amp;gt; /var/www/jenkins/jenkins.log 2&amp;gt; /var/www/ jenkins/jenkins-error.log &amp;amp; ;; stop) echo &amp;quot;stop&amp;quot; ;; *) echo &amp;quot;Usage: $0 (start|stop)&amp;quot; ;; esac  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/linux/split/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/linux/split/</guid>
      <description>切割文件 指定每个文件的大小和名称前缀 split -b 10m minikube-v0.26.0.iso minikube-v0.26.0.iso-part-
合并文件，可以使用命令 cat minikube-v0.26.0.iso-part-* &amp;gt; minikube.iso</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/linux/user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/linux/user/</guid>
      <description>添加用户 useradd user-name 添加用户 user-name ，并没有添加用户目录、密码、shell等
useradd user-name --home /home/user-name --create-home
su user-name
userdel user-name</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/linux/wget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/linux/wget/</guid>
      <description>代理 通过命令参数设置代理 wget https://google.com -e &amp;quot;https_proxy=http://localhost:1234&amp;quot;
为了方便使用，我们可以为 wget 添加一个别名，如下所示：
alias wall-wget=&#39;wget -e &amp;quot;https_proxy=http://localhost:8123&amp;quot; &#39;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/mac/mac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/mac/mac/</guid>
      <description>快捷键 删除文件 command + delete
浏览器 关闭选项卡 command + w
前后切换选项卡 command + &amp;lt;-
指定顺序切换选项卡 command + 1
关闭浏览器 command + q
截图  截取全屏并保存文件 shift + command + 3
 截取部分并保存文件 shift + command + 4
 截取全屏并保存粘贴板 shift + control + command + 3
 截取部分并保存粘贴板 shift + control + command + 4
  丢失管理身份 当你的误操作导致丢失了 mac 用户的管理员身份时，可以按照下面的步骤找回管理。
 开机后按下 command+s
 进入终端后输入命令 /sbin/mount -uaw`
 执行命令 rm /var/db/.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://linuxsuren.github.io/blog/os/telnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linuxsuren.github.io/blog/os/telnet/</guid>
      <description>退出 首先，按下 Ctrl+] 然后输入 \q 后，按下回车即可退出 Telnet。</description>
    </item>
    
  </channel>
</rss>