<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins API 介绍 on SuRenPi</title>
    <link>http://localhost:1313/blog/devops/jenkins/api/</link>
    <description>Recent content in Jenkins API 介绍 on SuRenPi</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 15 Jul 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/devops/jenkins/api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blue Ocean</title>
      <link>http://localhost:1313/blog/devops/jenkins/api/blueocean/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/devops/jenkins/api/blueocean/</guid>
      <description>API 列表 获取 JUnit 测试包括的 API 包括如下：&#xA;http://localhost:8080/jenkins/blue/rest/organizations/jenkins/pipelines/demo/runs/7/tests/?state=REGRESSION&amp;amp;start=0&amp;amp;limit=101&#xA;http://localhost:8080/jenkins/blue/rest/organizations/jenkins/pipelines/demo/runs/7/tests/?status=FAILED&amp;amp;state!=REGRESSION&amp;amp;start=0&amp;amp;limit=101&#xA;ttps://localhost:8080/jenkins/blue/rest/organizations/jenkins/pipelines/demo/runs/7/tests/?status=SKIPPED&amp;amp;start=0&amp;amp;limit=101&#xA;http://localhost:8080/jenkins/blue/rest/organizations/jenkins/pipelines/demo/runs/7/tests/?state=FIXED&amp;amp;start=0&amp;amp;limit=101&#xA;http://localhost:8080/jenkins/blue/rest/organizations/jenkins/pipelines/demo/runs/7/tests/?status=PASSED&amp;amp;start=0&amp;amp;limit=101&#xA;响应体的结构如下：&#xA;{ Age int // Duration the time of test Duration float32 // ErrorDetails error details of test ErrorDetails string // ErrorStackTrace if the status is erro then error stack trace of test ErrorStackTrace string // HasStdLog indicate whether has standard log outpupt HasStdLog bool // ID id for the test report item ID string // Name is the name of test report item Name string State string // Status indicates the status of report item Status string } 在 Jenkins 的测试报告中，可以拿到五种状态： REGRESSION FAILED SKIPPED FIXED PASSED 其中 REGRESSION 和 FIXED 使用的字段为 state</description>
    </item>
    <item>
      <title>Token</title>
      <link>http://localhost:1313/blog/devops/jenkins/api/token/</link>
      <pubDate>Tue, 07 May 2019 11:54:58 +0800</pubDate>
      <guid>http://localhost:1313/blog/devops/jenkins/api/token/</guid>
      <description>curl http://localhost:8080/user/admin/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken --header &amp;#34;Authorization: Basic `echo -n admin:1182fc5ef9b28a630986cb50c0319eb9d0 | base64`&amp;#34; -X POST -d &amp;#39;newTokenName=name&amp;#39; 返回的数据如下所示：&#xA;{&amp;#34;status&amp;#34;:&amp;#34;ok&amp;#34;,&amp;#34;data&amp;#34;:{&amp;#34;tokenName&amp;#34;:&amp;#34;test&amp;#34;,&amp;#34;tokenUuid&amp;#34;:&amp;#34;3a07e7d7-c864-4474-bc3c-d217938e460e&amp;#34;,&amp;#34;tokenValue&amp;#34;:&amp;#34;1123acbf5d3e93e628a38dc0a671cf0194&amp;#34;}} </description>
    </item>
    <item>
      <title>Pipeline</title>
      <link>http://localhost:1313/blog/devops/jenkins/api/pipeline/</link>
      <pubDate>Sun, 05 May 2019 10:26:05 +0800</pubDate>
      <guid>http://localhost:1313/blog/devops/jenkins/api/pipeline/</guid>
      <description></description>
    </item>
    <item>
      <title>Approve</title>
      <link>http://localhost:1313/blog/devops/jenkins/api/approve/</link>
      <pubDate>Thu, 04 Apr 2019 10:49:47 +0800</pubDate>
      <guid>http://localhost:1313/blog/devops/jenkins/api/approve/</guid>
      <description>这里介绍的是核准插件中的 API 使用。&#xA;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;admonition-content&amp;quot;&amp;gt; 该 DSL 是基于某一次构建的，因此，下面的 API 都需要对应的构建 ID。另外，还需要对应的 inputid。另外，下面提到的 API 并不是基于 Restful 风格 编写的，实际上是以表单的方式来提交的。也就是说，需要在发送请求时，在协议头中加入 Content-Type: application/x-www-form-urlencoded&#xA;通过 input 这个 DSL 支持接收参数。&#xA;无参数 对于没有参数的情况，可以使用下面的两个 API 来核准。&#xA;curl http://localhost:8080/job/pipeline/1/input/inputid/proceed \ --header &amp;#34;Authorization: Basic `echo -n admin:token | base64`&amp;#34; -X POST 下面的 API 是直接无参数的调用&#xA;curl http://localhost:8080/job/pipeline/1/input/inputid/proceedEmpty \ --header &amp;#34;Authorization: Basic `echo -n admin:token | base64`&amp;#34; -X POST 有参数 参数需要以 JSON 数组的形式传递。&#xA;curl http://localhost:8080/job/pipeline/1/input/inputid/proceed \ --header &amp;#34;Authorization: Basic `echo -n admin:token | base64`&amp;#34; \ -X POST -d &amp;#39;json={&amp;#34;parameter&amp;#34;: [{&amp;#34;name&amp;#34;: &amp;#34;name&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;bob&amp;#34;}, {&amp;#34;name&amp;#34;: &amp;#34;age&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;12&amp;#34;}]}&amp;#39; 如果缺少参数的话，会返回 400</description>
    </item>
    <item>
      <title>CrumIssuer</title>
      <link>http://localhost:1313/blog/devops/jenkins/api/crumissuer/</link>
      <pubDate>Wed, 09 Jan 2019 17:35:18 +0800</pubDate>
      <guid>http://localhost:1313/blog/devops/jenkins/api/crumissuer/</guid>
      <description>如果配置了跨站请求伪造保护的话，可以通过下面的命令来获取相应的 Token&#xA;curl -u user:passwd http:/localhost:8080/jenkins/crumbIssuer/api/json&#xA;返回值类似于，而如果没有启用该配置的话会返回 404&#xA;{&amp;#34;_class&amp;#34;:&amp;#34;hudson.security.csrf.DefaultCrumbIssuer&amp;#34;,&amp;#34;crumb&amp;#34;:&amp;#34;6e78c5725ea0c522bdcb787d548465aa&amp;#34;,&amp;#34;crumbRequestField&amp;#34;:&amp;#34;Jenkins-Crumb&amp;#34;} 使用该 Crumb 的方式如下：&#xA;curl -u user:passwd http:/localhost:8080/jenkins/job/jobName/build -X POST --header &amp;quot;Jenkins-Crumb: 6e78c5725ea0c522bdcb787d548465aa&amp;quot;&#xA;使用 Python 获取 Crumb 值：&#xA;export issuer=$(curl -u admin:$JENKINS_TOKEN $JENKINS_URL/crumbIssuer/api/json -s) issuer=$(python -c &amp;#34;import json;import os;issuer=os.getenv(&amp;#39;issuer&amp;#39;);issuer=json.loads(issuer);print issuer[&amp;#39;crumb&amp;#39;]&amp;#34;) </description>
    </item>
    <item>
      <title>多分支流水线</title>
      <link>http://localhost:1313/blog/devops/jenkins/api/multi-branch/</link>
      <pubDate>Wed, 09 Jan 2019 15:44:33 +0800</pubDate>
      <guid>http://localhost:1313/blog/devops/jenkins/api/multi-branch/</guid>
      <description>扫描多分支 curl -X POST -u user:passwd http://localhost:8080/jenkins/job/jobName/build --header &amp;quot;Jenkins-Crumb: 6e78c5725ea0c522bdcb787d548465aa&amp;quot;&#xA;Jenkins-Crumb 需要单独获取。</description>
    </item>
    <item>
      <title>Jenkins 核心</title>
      <link>http://localhost:1313/blog/devops/jenkins/api/core/</link>
      <pubDate>Thu, 03 Jan 2019 16:29:11 +0800</pubDate>
      <guid>http://localhost:1313/blog/devops/jenkins/api/core/</guid>
      <description>你可以通过如下的方式来访问 Jenkins：&#xA;单个任务 curl http://localhost:8080/jenkins/job/jobName/api/json?pretty=true 获取任务信息&#xA;curl -X POST http://localhost:8080/jenkins/job/jobName/build 触发构建，API 返回码是 201&#xA;``&#xA;curl -X POST http://localhost:8080/jenkins/job/jobName/submitDescription?description=hello 添加描述信息&#xA;curl -X POST http://localhost:8080/jenkins/job/jobName/disable 禁用任务&#xA;curl -X POST http://localhost:8080/jenkins/job/jobName/enable 启用任务&#xA;curl -X POST http://localhost:8080/jenkins/job/jobName/doDelete 删除任务&#xA;搜索任务 curl https://localhost:8080/jenkins/search/suggest?query=test 通过关键字搜索任务&#xA;构建历史 curl http://localhost:8080/jenkins/job/jobName/1/consoleText 获取构建历史的控制台日志&#xA;curl http://localhost:8080/jenkins/job/jobName/1/logText/progressiveText?start=0 获取部分日志，并返回是否还有未输出的日志。协议头中的 X-Text-Size 为日志内容的大小，X-More-Data 的值如果为 true 的话则标示还有未输出的日志。&#xA;curl -X POST http://localhost:8080/jenkins/job/jobName/1/doDelete 删除构建历史&#xA;curl -X POST http://localhost:8080/jenkins/job/jobName/1/stop 停止构建&#xA;下面是特定情况的构建：&#xA;curl http://localhost:8080/jenkins/job/jobName/lastBuild/consoleText 最近一次构建的日志&#xA;curl http://localhost:8080/jenkins/job/jobName/lastFailedBuild/consoleText 最近一次失败构建的日志&#xA;curl http://localhost:8080/jenkins/job/jobName/lastUnsuccessfulBuild/consoleText 最近一次未成功的构建日志</description>
    </item>
  </channel>
</rss>
